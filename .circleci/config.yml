version: 2.1
orbs:
  k8s: circleci/kubernetes@0.7.0
commands:
  git_checkout_from_cache:
    description: "Git checkout and save cache"
    steps:
      - restore_cache:
          name: Git restore cache
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - run:
          name: Fetch git tags
          command: |
            mkdir -p ~/.ssh
            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ== ' >> ~/.ssh/known_hosts
            # Fetch tags if git cache is present
            if [ -e /home/circleci/project/.git ]
            then
              git fetch origin --tags
            fi
      - checkout
      - run:
          name: Compress git objects
          command: git gc
      - save_cache:
          name: Git save cache
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
  docker_build:
    description: "Build Docker image"
    steps:
      - setup_remote_docker
      - run:
          name: Building docker image
          command: |
            docker build -t ${DOCKHUB_ORGANISATION}/binary-bitcoin-wallet:${CIRCLE_SHA1} -t ${DOCKHUB_ORGANISATION}/binary-bitcoin-wallet:latest .
  docker_push:
    description: "Push image to docker hub"
    steps:
      - run:
          name: Pushing Image to docker hub
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push ${DOCKHUB_ORGANISATION}/binary-bitcoin-wallet:${CIRCLE_SHA1}
            docker push ${DOCKHUB_ORGANISATION}/binary-bitcoin-wallet:latest
  deploy_gh_pages:
    description: "Deploy to static branches"
    parameters:
      target_branch:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Tag build
          command: echo "<< parameters.target_branch >>-$(date -u +'%Y-%m-%dT%H:%M:%SZ')" > ./version
      - run:
          name: Install and configure dependencies
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt install nodejs
            mkdir "/home/circleci/.npm-packages"
            npm config set prefix "/home/circleci/.npm-packages"
            npm install -g gh-pages@2.0.1
            git config user.email "ci-build@binary.com"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "5e:29:b6:17:40:54:7c:c7:45:b5:9a:c1:28:c2:6a:1a"
      - run:
          name: Deploy docs to gh-pages branch
          command: /home/circleci/.npm-packages/bin/gh-pages -d ./ --branch << parameters.target_branch >> --message '[skip ci]'

  k8s_deploy:
    description: "Deploy to k8s cluster"
    steps:
      - k8s/install-kubectl
      - run:
          name: Deploying to k8s cluster for service binary-bitcoin-wallet
          command: |
            for SERVER_ID in {1..5}
            do
              KUBE_SERVER_REF="KUBE_SERVER_$SERVER_ID"
              SERVICEACCOUNT_TOKEN_REF="SERVICEACCOUNT_TOKEN_$SERVER_ID"
              CA_CRT_REF="CA_CRT_$SERVER_ID"
              if [ ! -z "${!KUBE_SERVER_REF}" ]
              then
                echo "Deploying to cluster $SERVER_ID"
                CA_CRT="${!CA_CRT_REF}"
                KUBE_SERVER="${!KUBE_SERVER_REF}"
                SERVICEACCOUNT_TOKEN="${!SERVICEACCOUNT_TOKEN_REF}"
                echo $CA_CRT | base64 --decode > ca.crt
                kubectl --server=${KUBE_SERVER} --certificate-authority=ca.crt --token=$SERVICEACCOUNT_TOKEN set image deployment/bitcoin-wallet-binary-com bitcoin-wallet-binary-com=${DOCKHUB_ORGANISATION}/binary-bitcoin-wallet:${CIRCLE_SHA1}
              fi
            done
jobs:
  release_production:
    docker:
      - image: circleci/ruby:2.6.5
    steps:
      - git_checkout_from_cache
      - docker_build
      - docker_push
      - k8s_deploy
      - deploy_gh_pages:
          target_branch: "production"

workflows:
  release:
    jobs:
      - release_production:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^production.*/
          context: binary-frontend-artifact-upload # context name needed to be changed here
